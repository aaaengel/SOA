services:
  db:
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_USER: banilacrew
      POSTGRES_PASSWORD: soapass
      POSTGRES_DB: soa
    ports:
      - "5432:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_started
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 6
  userservice:
    build:
      context: ./UserService
      dockerfile: Dockerfile
    container_name: userservice
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_started
    ports:
      - "5001:5001"
    environment:
      DATABASE_URL: postgresql+asyncpg://banilacrew:soapass@db:5432/soa
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5001/hello || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6
  postservice:
    build:
      context: .
      dockerfile: PostComService/Dockerfile
    container_name: postservice
    depends_on:
      kafka:
        condition: service_healthy
      db:
        condition: service_started
      userservice:
        condition: service_healthy
    ports:
      - "50051:50051"
    environment:
      DATABASE_URL: postgresql://banilacrew:soapass@db:5432/soa
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  postapi:
    build:
      context: .
      dockerfile: PostApi/Dockerfile
    container_name: postapi
    depends_on:
      - postservice
    ports:
      - "8000:8000"
    environment:
      GRPC_POST_SERVICE_URL: postservice:50051
  apigateway:
    build:
      context: ./Gateway
      dockerfile: Dockerfile
    container_name: apigateway
    depends_on:
      - kafka
      - userservice
      - postapi
    ports:
      - "5000:5000"
    environment:
      USER_SERVICE_URL: http://userservice:5001

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
